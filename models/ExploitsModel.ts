import mongoose, { Schema, type Document, Types } from "mongoose";
import type { Users } from "./UsersModel";

export interface Exploits extends Document {
  name: string;
  description: string;
  code: string;
  target_system: string;
  cve_id?: string | null;
  severity: "low" | "medium" | "high" | "critical";
  author_id?: Types.ObjectId | Users | null;
  tags: string[];
  is_verified: boolean;
  created_at: Date;
  updated_at: Date;
  deleted_at?: Date | null;
}

const ExploitSchema: Schema = new Schema<Exploits>({
  name: { type: String, required: true },
  description: { type: String, required: true },
  code: { type: String, required: true },
  target_system: { type: String, required: true },
  cve_id: { type: String, default: null },
  severity: {
    type: String,
    required: true,
    enum: ["low", "medium", "high", "critical"],
  },
  author_id: {
    type: Schema.Types.ObjectId,
    ref: "User",
    default: null,
  },
  tags: { type: [String], default: [] },
  is_verified: { type: Boolean, default: false },
  created_at: { type: Date, default: Date.now },
  updated_at: { type: Date, default: Date.now },
  deleted_at: { type: Date, default: null },
});

export default mongoose.models.Exploits ||
  mongoose.model<Exploits>("Exploits", ExploitSchema);
