// Vulnerability database for common CMS platforms

export interface Vulnerability {
  id: string
  cmsType: string
  name: string
  description: string
  severity: "critical" | "high" | "medium" | "low" | "info"
  cve?: string
  cvss?: number
  affectedVersions?: string
  fixedVersions?: string
  references?: string[]
  detectionPatterns: string[]
  exploitAvailable: boolean
}

// Database of known vulnerabilities
export const vulnerabilityDatabase: Vulnerability[] = [
  // WordPress Vulnerabilities
  {
    id: "WP-CVE-2023-45132",
    cmsType: "WordPress",
    name: "WordPress Unauthenticated Blind Server-Side Request Forgery",
    description: "WordPress is affected by an Unauthenticated Blind SSRF vulnerability in the WP_oEmbed class.",
    severity: "high",
    cve: "CVE-2023-45132",
    cvss: 8.2,
    affectedVersions: "< 6.3.2",
    fixedVersions: ">= 6.3.2",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2023-45132",
      "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-core/cve-2023-45132",
    ],
    detectionPatterns: ["wp-includes/class-wp-oembed.php"],
    exploitAvailable: true,
  },
  {
    id: "WP-CVE-2023-3460",
    cmsType: "WordPress",
    name: "WordPress REST API Information Disclosure",
    description:
      "WordPress is affected by an information disclosure vulnerability in the REST API that could expose draft posts.",
    severity: "medium",
    cve: "CVE-2023-3460",
    cvss: 5.3,
    affectedVersions: "< 6.2.1",
    fixedVersions: ">= 6.2.1",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2023-3460",
      "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-core/cve-2023-3460",
    ],
    detectionPatterns: ["wp-includes/rest-api"],
    exploitAvailable: false,
  },
  {
    id: "WP-CVE-2022-21661",
    cmsType: "WordPress",
    name: "WordPress SQL Injection Vulnerability",
    description:
      "SQL injection vulnerability in WP_Query in WordPress allows attackers to extract sensitive information from the database.",
    severity: "critical",
    cve: "CVE-2022-21661",
    cvss: 8.9,
    affectedVersions: "< 5.8.3",
    fixedVersions: ">= 5.8.3",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2022-21661",
      "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-core/cve-2022-21661",
    ],
    detectionPatterns: ["wp-includes/class-wp-query.php"],
    exploitAvailable: true,
  },
  {
    id: "WP-CVE-2021-29447",
    cmsType: "WordPress",
    name: "WordPress Media Library XXE Vulnerability",
    description:
      "XML external entity (XXE) vulnerability in the media library allows attackers to read arbitrary files on the server.",
    severity: "high",
    cve: "CVE-2021-29447",
    cvss: 7.1,
    affectedVersions: "< 5.7.1",
    fixedVersions: ">= 5.7.1",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2021-29447",
      "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-core/cve-2021-29447",
    ],
    detectionPatterns: ["wp-includes/media.php"],
    exploitAvailable: true,
  },

  // Joomla Vulnerabilities
  {
    id: "JM-CVE-2023-23752",
    cmsType: "Joomla",
    name: "Joomla Improper Access Control",
    description:
      "Improper access control in Joomla! allows unauthenticated users to access the API and create new users with elevated privileges.",
    severity: "critical",
    cve: "CVE-2023-23752",
    cvss: 9.8,
    affectedVersions: "4.0.0 - 4.2.7",
    fixedVersions: ">= 4.2.8",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2023-23752",
      "https://developer.joomla.org/security-centre/894-20230201-core-improper-access-control-in-webservice-endpoints.html",
    ],
    detectionPatterns: ["com_users", "com_config", "api/index.php"],
    exploitAvailable: true,
  },
  {
    id: "JM-CVE-2022-27081",
    cmsType: "Joomla",
    name: "Joomla CSRF Vulnerability",
    description:
      "Cross-site request forgery (CSRF) vulnerability in Joomla! allows attackers to execute arbitrary commands.",
    severity: "high",
    cve: "CVE-2022-27081",
    cvss: 8.0,
    affectedVersions: "< 4.1.2",
    fixedVersions: ">= 4.1.2",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2022-27081",
      "https://developer.joomla.org/security-centre/863-20220502-core-csrf-in-media-manager.html",
    ],
    detectionPatterns: ["com_media", "administrator/components/com_media"],
    exploitAvailable: false,
  },

  // Drupal Vulnerabilities
  {
    id: "DP-CVE-2023-39955",
    cmsType: "Drupal",
    name: "Drupal Core Remote Code Execution",
    description:
      "A remote code execution vulnerability in Drupal Core's Twig template engine allows attackers to execute arbitrary code.",
    severity: "critical",
    cve: "CVE-2023-39955",
    cvss: 9.8,
    affectedVersions: "< 10.1.2 or < 9.5.11",
    fixedVersions: ">= 10.1.2 or >= 9.5.11",
    references: ["https://nvd.nist.gov/vuln/detail/CVE-2023-39955", "https://www.drupal.org/sa-core-2023-005"],
    detectionPatterns: ["core/lib/Drupal/Core/Template", "includes/theme.inc"],
    exploitAvailable: true,
  },
  {
    id: "DP-CVE-2022-25271",
    cmsType: "Drupal",
    name: "Drupal Core Cross-Site Scripting",
    description:
      "Cross-site scripting (XSS) vulnerability in Drupal Core allows attackers to inject malicious scripts.",
    severity: "medium",
    cve: "CVE-2022-25271",
    cvss: 5.4,
    affectedVersions: "< 9.3.9",
    fixedVersions: ">= 9.3.9",
    references: ["https://nvd.nist.gov/vuln/detail/CVE-2022-25271", "https://www.drupal.org/sa-core-2022-006"],
    detectionPatterns: ["core/modules/ckeditor5", "core/modules/filter"],
    exploitAvailable: false,
  },

  // Laravel Vulnerabilities
  {
    id: "LV-CVE-2021-43617",
    cmsType: "Laravel",
    name: "Laravel Debug Mode Information Disclosure",
    description:
      "Laravel debug mode enabled can lead to sensitive information disclosure including environment variables and application secrets.",
    severity: "high",
    cve: "CVE-2021-43617",
    cvss: 7.5,
    affectedVersions: "All versions with debug mode enabled",
    fixedVersions: "N/A (configuration issue)",
    references: ["https://nvd.nist.gov/vuln/detail/CVE-2021-43617"],
    detectionPatterns: ["APP_DEBUG=true", "vendor/laravel/framework", "Whoops\\Exception\\ErrorException"],
    exploitAvailable: false,
  },
  {
    id: "LV-CVE-2021-3129",
    cmsType: "Laravel",
    name: "Laravel Ignition Remote Code Execution",
    description:
      "Remote code execution vulnerability in Laravel Ignition allows attackers to execute arbitrary PHP code on the server.",
    severity: "critical",
    cve: "CVE-2021-3129",
    cvss: 9.8,
    affectedVersions: "Laravel 8.x < 8.4.2",
    fixedVersions: ">= 8.4.2",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2021-3129",
      "https://github.com/laravel/framework/security/advisories/GHSA-mfm7-rx2j-h2q7",
    ],
    detectionPatterns: ["vendor/facade/ignition", "Facade\\Ignition"],
    exploitAvailable: true,
  },

  // Magento Vulnerabilities
  {
    id: "MG-CVE-2022-24086",
    cmsType: "Magento",
    name: "Adobe Commerce/Magento Remote Code Execution",
    description:
      "Pre-authenticated remote code execution vulnerability in Adobe Commerce and Magento Open Source allows attackers to execute arbitrary code.",
    severity: "critical",
    cve: "CVE-2022-24086",
    cvss: 9.8,
    affectedVersions: "2.4.3-p1 and earlier, 2.3.7-p2 and earlier",
    fixedVersions: "2.4.3-p2, 2.3.7-p3",
    references: [
      "https://nvd.nist.gov/vuln/detail/CVE-2022-24086",
      "https://helpx.adobe.com/security/products/magento/apsb22-12.html",
    ],
    detectionPatterns: ["app/code/Magento", "vendor/magento"],
    exploitAvailable: true,
  },
]

// Common WordPress plugins with known vulnerabilities
export const wordpressPlugins = [
  {
    name: "Contact Form 7",
    slug: "contact-form-7",
    vulnerabilities: [
      {
        id: "WP-PLUGIN-CF7-CVE-2022-24946",
        name: "Contact Form 7 Unrestricted File Upload",
        description: "Contact Form 7 before 5.5.7 allows unrestricted file upload and remote code execution.",
        severity: "high",
        cve: "CVE-2022-24946",
        affectedVersions: "< 5.5.7",
        fixedVersions: ">= 5.5.7",
      },
    ],
  },
  {
    name: "Elementor",
    slug: "elementor",
    vulnerabilities: [
      {
        id: "WP-PLUGIN-ELEMENTOR-CVE-2023-3259",
        name: "Elementor Authenticated RCE",
        description:
          "Elementor Website Builder for WordPress is vulnerable to remote code execution via the Elementor template import functionality.",
        severity: "critical",
        cve: "CVE-2023-3259",
        affectedVersions: "< 3.14.1",
        fixedVersions: ">= 3.14.1",
      },
    ],
  },
  {
    name: "WooCommerce",
    slug: "woocommerce",
    vulnerabilities: [
      {
        id: "WP-PLUGIN-WOOCOMMERCE-CVE-2023-28121",
        name: "WooCommerce SQL Injection",
        description:
          "SQL injection vulnerability in WooCommerce allows attackers to extract sensitive information from the database.",
        severity: "critical",
        cve: "CVE-2023-28121",
        affectedVersions: "< 7.5.1",
        fixedVersions: ">= 7.5.1",
      },
    ],
  },
  {
    name: "Yoast SEO",
    slug: "wordpress-seo",
    vulnerabilities: [
      {
        id: "WP-PLUGIN-YOAST-CVE-2023-26513",
        name: "Yoast SEO Cross-Site Scripting",
        description:
          "Cross-site scripting (XSS) vulnerability in Yoast SEO allows attackers to inject malicious scripts.",
        severity: "medium",
        cve: "CVE-2023-26513",
        affectedVersions: "< 20.1",
        fixedVersions: ">= 20.1",
      },
    ],
  },
]

// Common Joomla extensions with known vulnerabilities
export const joomlaExtensions = [
  {
    name: "JCE Editor",
    slug: "com_jce",
    vulnerabilities: [
      {
        id: "JM-EXT-JCE-CVE-2023-1177",
        name: "JCE Editor Arbitrary File Upload",
        description: "JCE Editor for Joomla allows for arbitrary file upload and remote code execution.",
        severity: "high",
        cve: "CVE-2023-1177",
        affectedVersions: "< 2.9.18",
        fixedVersions: ">= 2.9.18",
      },
    ],
  },
  {
    name: "Akeeba Backup",
    slug: "com_akeeba",
    vulnerabilities: [
      {
        id: "JM-EXT-AKEEBA-CVE-2022-36289",
        name: "Akeeba Backup Information Disclosure",
        description: "Akeeba Backup for Joomla is vulnerable to information disclosure.",
        severity: "medium",
        cve: "CVE-2022-36289",
        affectedVersions: "< 9.5.0",
        fixedVersions: ">= 9.5.0",
      },
    ],
  },
]

// Common Drupal modules with known vulnerabilities
export const drupalModules = [
  {
    name: "Views",
    slug: "views",
    vulnerabilities: [
      {
        id: "DP-MOD-VIEWS-CVE-2022-39261",
        name: "Drupal Views Access Bypass",
        description:
          "Access bypass vulnerability in Drupal Views module allows unauthorized access to restricted content.",
        severity: "high",
        cve: "CVE-2022-39261",
        affectedVersions: "< 9.4.8",
        fixedVersions: ">= 9.4.8",
      },
    ],
  },
  {
    name: "Webform",
    slug: "webform",
    vulnerabilities: [
      {
        id: "DP-MOD-WEBFORM-CVE-2023-1326",
        name: "Drupal Webform Cross-Site Scripting",
        description: "Cross-site scripting vulnerability in Drupal Webform module.",
        severity: "medium",
        cve: "CVE-2023-1326",
        affectedVersions: "< 6.2.0",
        fixedVersions: ">= 6.2.0",
      },
    ],
  },
]

// Function to get vulnerabilities by CMS type
export function getVulnerabilitiesByCMS(cmsType: string): Vulnerability[] {
  return vulnerabilityDatabase.filter((vuln) => vuln.cmsType.toLowerCase() === cmsType.toLowerCase())
}

// Function to get plugins/extensions by CMS type
export function getPluginsByCMS(cmsType: string): any[] {
  switch (cmsType.toLowerCase()) {
    case "wordpress":
      return wordpressPlugins
    case "joomla":
      return joomlaExtensions
    case "drupal":
      return drupalModules
    default:
      return []
  }
}
