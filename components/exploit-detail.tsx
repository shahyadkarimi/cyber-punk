"use client"

import { useState } from "react"
import Link from "next/link"
import {
  Copy,
  Check,
  Download,
  ArrowLeft,
  AlertTriangle,
  Globe,
  Tag,
  FileCode,
  Calendar,
  User,
  Shield,
} from "lucide-react"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Separator } from "@/components/ui/separator"
import type { Exploit } from "@/lib/database-services/exploits-service"

interface ExploitDetailProps {
  exploit: Exploit
}

export default function ExploitDetail({ exploit }: ExploitDetailProps) {
  const [copied, setCopied] = useState(false)

  const copyToClipboard = () => {
    navigator.clipboard.writeText(exploit.code)
    setCopied(true)
    setTimeout(() => setCopied(false), 2000)
  }

  const downloadExploit = () => {
    // Create a blob with the exploit code
    const blob = new Blob([exploit.code], { type: "text/plain" })

    // Create a temporary link element
    const link = document.createElement("a")
    link.href = URL.createObjectURL(blob)

    // Generate a filename based on the exploit name
    const filename = exploit.name
      .toLowerCase()
      .replace(/[^\w\s-]/g, "") // Remove special characters
      .replace(/\s+/g, "-") // Replace spaces with hyphens
      .concat(".txt")

    link.download = filename

    // Trigger the download
    document.body.appendChild(link)
    link.click()

    // Clean up
    document.body.removeChild(link)
    URL.revokeObjectURL(link.href)
  }

  const getSeverityColor = (severity: string): string => {
    switch (severity) {
      case "critical":
        return "text-red-400 border-red-400 bg-red-400/10"
      case "high":
        return "text-orange-400 border-orange-400 bg-orange-400/10"
      case "medium":
        return "text-yellow-400 border-yellow-400 bg-yellow-400/10"
      case "low":
        return "text-green-400 border-green-400 bg-green-400/10"
      default:
        return "text-gray-400 border-gray-400 bg-gray-400/10"
    }
  }

  const getSeverityDescription = (severity: string): string => {
    switch (severity) {
      case "critical":
        return "Critical vulnerabilities pose immediate threat and should be patched immediately."
      case "high":
        return "High severity vulnerabilities require urgent attention and patching."
      case "medium":
        return "Medium severity vulnerabilities should be addressed in a timely manner."
      case "low":
        return "Low severity vulnerabilities have minimal impact but should still be addressed."
      default:
        return ""
    }
  }

  const formatDate = (dateString: string): string => {
    return new Date(dateString).toLocaleDateString("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    })
  }

  return (
    <div className="space-y-6">
      {/* Breadcrumb Navigation */}
      <div className="flex items-center mb-4">
        <Link
          href="/exploits"
          className="font-mono text-gray-400 hover:text-[#00ff9d] transition-colors flex items-center mr-4"
        >
          <ArrowLeft className="mr-1 h-4 w-4" />
          Back to Exploits
        </Link>
      </div>

      {/* Main Content Card */}
      <Card className="bg-[#1a1a1a] border-[#2a2a3a]">
        <CardHeader className="pb-2">
          {/* Badges */}
          <div className="flex flex-wrap gap-2 mb-2">
            <Badge variant="outline" className={`font-mono ${getSeverityColor(exploit.severity)}`}>
              {exploit.severity.toUpperCase()}
            </Badge>
            {exploit.cve_id ? (
              <Badge variant="outline" className="font-mono text-[#00b8ff] border-[#00b8ff] bg-[#00b8ff]/10">
                {exploit.cve_id}
              </Badge>
            ) : (
              <Badge variant="outline" className="font-mono text-gray-400 border-gray-400 bg-gray-400/10">
                No CVE
              </Badge>
            )}
            {exploit.is_verified && (
              <Badge variant="outline" className="font-mono text-green-400 border-green-400 bg-green-400/10">
                <Shield className="mr-1 h-3 w-3" />
                Verified
              </Badge>
            )}
          </div>

          {/* Title */}
          <CardTitle className="text-2xl font-bold font-mono text-[#00ff9d] mb-2">{exploit.name}</CardTitle>

          {/* Meta Information */}
          <div className="flex flex-wrap gap-4 text-sm text-gray-400 font-mono">
            <div className="flex items-center">
              <User className="mr-1 h-4 w-4" />
              {exploit.author?.username || "Anonymous"}
            </div>
            <div className="flex items-center">
              <Calendar className="mr-1 h-4 w-4" />
              {formatDate(exploit.created_at)}
            </div>
            {exploit.updated_at !== exploit.created_at && (
              <div className="flex items-center">
                <Calendar className="mr-1 h-4 w-4" />
                Updated: {formatDate(exploit.updated_at)}
              </div>
            )}
          </div>
        </CardHeader>

        <CardContent className="pt-2">
          <Tabs defaultValue="details" className="w-full">
            <TabsList className="grid w-full grid-cols-3 bg-[#0a0a0c] mb-6">
              <TabsTrigger
                value="details"
                className="font-mono data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                Details
              </TabsTrigger>
              <TabsTrigger
                value="code"
                className="font-mono data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                Exploit Code
              </TabsTrigger>
              <TabsTrigger
                value="references"
                className="font-mono data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                References
              </TabsTrigger>
            </TabsList>

            {/* Details Tab */}
            <TabsContent value="details" className="space-y-6">
              <div className="space-y-4">
                <div>
                  <h3 className="text-lg font-bold font-mono text-[#00ff9d] mb-2 flex items-center">
                    <AlertTriangle className="mr-2 h-5 w-5" />
                    Description
                  </h3>
                  <p className="text-gray-300 font-mono text-sm leading-relaxed">{exploit.description}</p>
                </div>

                <Separator className="border-[#2a2a3a]" />

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <h3 className="text-lg font-bold font-mono text-[#00ff9d] mb-2 flex items-center">
                      <FileCode className="mr-2 h-5 w-5" />
                      Exploit Details
                    </h3>
                    <div className="space-y-3">
                      <div className="flex items-start">
                        <span className="text-gray-400 font-mono text-sm w-24 flex-shrink-0">Target:</span>
                        <span className="text-gray-300 font-mono text-sm">{exploit.target_system}</span>
                      </div>
                      <div className="flex items-start">
                        <span className="text-gray-400 font-mono text-sm w-24 flex-shrink-0">Severity:</span>
                        <div>
                          <span className="text-gray-300 font-mono text-sm">{exploit.severity.toUpperCase()}</span>
                          <p className="text-gray-500 font-mono text-xs mt-1">
                            {getSeverityDescription(exploit.severity)}
                          </p>
                        </div>
                      </div>
                      <div className="flex items-start">
                        <span className="text-gray-400 font-mono text-sm w-24 flex-shrink-0">CVE:</span>
                        <span className="text-gray-300 font-mono text-sm">{exploit.cve_id || "No CVE assigned"}</span>
                      </div>
                      <div className="flex items-start">
                        <span className="text-gray-400 font-mono text-sm w-24 flex-shrink-0">Author:</span>
                        <span className="text-gray-300 font-mono text-sm">
                          {exploit.author?.username || "Anonymous"}
                        </span>
                      </div>
                      <div className="flex items-start">
                        <span className="text-gray-400 font-mono text-sm w-24 flex-shrink-0">Status:</span>
                        <span className="text-green-400 font-mono text-sm">
                          {exploit.is_verified ? "Verified" : "Unverified"}
                        </span>
                      </div>
                    </div>
                  </div>

                  <div>
                    <h3 className="text-lg font-bold font-mono text-[#00ff9d] mb-2 flex items-center">
                      <Tag className="mr-2 h-5 w-5" />
                      Tags
                    </h3>
                    <div className="flex flex-wrap gap-2">
                      {exploit.tags && exploit.tags.length > 0 ? (
                        exploit.tags.map((tag, index) => (
                          <Badge
                            key={index}
                            variant="outline"
                            className="font-mono text-gray-300 border-[#2a2a3a] hover:bg-[#2a2a3a] cursor-pointer"
                          >
                            {tag}
                          </Badge>
                        ))
                      ) : (
                        <span className="text-gray-500 font-mono text-sm">No tags available</span>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </TabsContent>

            {/* Code Tab */}
            <TabsContent value="code">
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <h3 className="text-lg font-bold font-mono text-[#00ff9d] flex items-center">
                    <FileCode className="mr-2 h-5 w-5" />
                    Exploit Code
                  </h3>
                  <div className="flex gap-2">
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={copyToClipboard}
                      className="font-mono border-[#2a2a3a] text-gray-300 hover:bg-[#2a2a3a] hover:text-white"
                    >
                      {copied ? (
                        <>
                          <Check className="mr-2 h-4 w-4 text-green-400" />
                          Copied
                        </>
                      ) : (
                        <>
                          <Copy className="mr-2 h-4 w-4" />
                          Copy Code
                        </>
                      )}
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={downloadExploit}
                      className="font-mono border-[#2a2a3a] text-gray-300 hover:bg-[#2a2a3a] hover:text-white"
                    >
                      <Download className="mr-2 h-4 w-4" />
                      Download
                    </Button>
                  </div>
                </div>

                <div className="p-4 bg-[#0a0a0c] border border-[#2a2a3a] rounded-md overflow-x-auto">
                  <pre className="font-mono text-sm text-gray-300 whitespace-pre-wrap">{exploit.code}</pre>
                </div>
              </div>
            </TabsContent>

            {/* References Tab */}
            <TabsContent value="references">
              <div className="space-y-4">
                <h3 className="text-lg font-bold font-mono text-[#00ff9d] mb-2 flex items-center">
                  <Globe className="mr-2 h-5 w-5" />
                  References & Resources
                </h3>

                <div className="p-4 bg-[#0a0a0c] border border-[#2a2a3a] rounded-md">
                  <ul className="space-y-3">
                    {exploit.cve_id && (
                      <li className="font-mono text-sm">
                        <span className="text-gray-400">CVE Details:</span>{" "}
                        <a
                          href={`https://nvd.nist.gov/vuln/detail/${exploit.cve_id}`}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-[#00b8ff] hover:text-[#00ff9d] transition-colors"
                        >
                          {exploit.cve_id} - National Vulnerability Database
                        </a>
                      </li>
                    )}
                    <li className="font-mono text-sm">
                      <span className="text-gray-400">Target System:</span>{" "}
                      <a
                        href={`https://www.google.com/search?q=${encodeURIComponent(
                          exploit.target_system + " security vulnerabilities",
                        )}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-[#00b8ff] hover:text-[#00ff9d] transition-colors"
                      >
                        {exploit.target_system} Security Resources
                      </a>
                    </li>
                    <li className="font-mono text-sm">
                      <span className="text-gray-400">Severity Level:</span>{" "}
                      <a
                        href={`https://www.google.com/search?q=${encodeURIComponent(
                          exploit.severity + " severity vulnerabilities",
                        )}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-[#00b8ff] hover:text-[#00ff9d] transition-colors"
                      >
                        {exploit.severity.toUpperCase()} Severity Exploits
                      </a>
                    </li>
                    <li className="font-mono text-sm">
                      <span className="text-gray-400">Related Exploits:</span>{" "}
                      <Link
                        href={`/exploits?search=${encodeURIComponent(exploit.target_system)}`}
                        className="text-[#00b8ff] hover:text-[#00ff9d] transition-colors"
                      >
                        More {exploit.target_system} Exploits
                      </Link>
                    </li>
                  </ul>
                </div>

                <div className="p-4 bg-[#1a1a1a] border border-[#2a2a3a] rounded-md">
                  <h4 className="font-mono text-[#00ff9d] mb-2">⚠️ Disclaimer</h4>
                  <p className="font-mono text-sm text-gray-300">
                    This exploit is provided for educational and research purposes only. The use of this exploit against
                    systems without explicit permission is illegal and unethical. Always ensure you have proper
                    authorization before testing any security vulnerabilities. The authors and Cyberpunk Web Shell Hub
                    are not responsible for any misuse of this information.
                  </p>
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </CardContent>
      </Card>
    </div>
  )
}
