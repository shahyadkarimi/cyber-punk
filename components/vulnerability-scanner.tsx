"use client"

import type React from "react"

import { useState } from "react"
import { Search, Download, Shield, Cog, AlertTriangle, X, Check } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"

export default function VulnerabilityScanner() {
  const [url, setUrl] = useState("")
  const [loading, setLoading] = useState(false)
  const [results, setResults] = useState<any | null>(null)
  const [error, setError] = useState<string | null>(null)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setError(null)

    if (!url) {
      setError("Please enter a URL")
      return
    }

    // Simple URL validation
    if (!url.match(/^(http|https):\/\/[a-zA-Z0-9-_.]+\.[a-zA-Z]{2,}(\/.*)?$/)) {
      setError("Please enter a valid URL (e.g., https://example.com)")
      return
    }

    setLoading(true)

    // Simulate API call
    setTimeout(() => {
      // This is dummy data for demonstration
      const dummyData = {
        url: url,
        scanDate: new Date().toISOString(),
        scanDuration: "12.5 seconds",
        cms: {
          name: "WordPress",
          version: "5.8.3",
          confidence: 95,
          outdated: true,
          recommendedVersion: "6.1.1",
        },
        vulnerabilities: [
          {
            id: "CVE-2022-1234",
            severity: "high",
            title: "Remote Code Execution in WP Core",
            description:
              "A vulnerability in WordPress core allows attackers to execute arbitrary code via specially crafted requests.",
            affected: "WordPress < 5.9.2",
            remediation: "Update WordPress to version 5.9.2 or later.",
            references: ["https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1234"],
          },
          {
            id: "CVE-2022-5678",
            severity: "medium",
            title: "SQL Injection in Contact Form 7",
            description:
              "Contact Form 7 plugin is vulnerable to SQL injection attacks which could lead to data exposure.",
            affected: "Contact Form 7 < 5.6.4",
            remediation: "Update Contact Form 7 to version 5.6.4 or later.",
            references: ["https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-5678"],
          },
          {
            id: "CVE-2022-9876",
            severity: "low",
            title: "Stored XSS in Comments",
            description: "WordPress comment system allows stored XSS attacks via specially crafted comments.",
            affected: "WordPress < 5.8.4",
            remediation: "Update WordPress to version 5.8.4 or later.",
            references: ["https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-9876"],
          },
        ],
        plugins: [
          { name: "Contact Form 7", version: "5.6.2", active: true, outdated: true, recommendedVersion: "5.6.4" },
          { name: "Yoast SEO", version: "19.1", active: true, outdated: false },
          { name: "WooCommerce", version: "7.0.0", active: true, outdated: false },
          { name: "Akismet", version: "5.0", active: false, outdated: false },
        ],
        themes: [
          { name: "Astra", version: "3.9.0", active: true, outdated: false },
          { name: "Twenty Twenty-Two", version: "1.0", active: false, outdated: true, recommendedVersion: "1.2" },
        ],
        serverInfo: {
          software: "nginx/1.18.0",
          hostname: "example-host",
          os: "Linux",
          headers: [
            { name: "Server", value: "nginx/1.18.0" },
            { name: "X-Powered-By", value: "PHP/7.4.3" },
            { name: "X-Frame-Options", value: "SAMEORIGIN" },
          ],
          outdatedComponents: [{ name: "PHP", current: "7.4.3", recommended: "8.1.5" }],
        },
        securityHeaders: {
          missing: ["Content-Security-Policy", "Strict-Transport-Security"],
          implemented: ["X-Content-Type-Options", "X-Frame-Options", "X-XSS-Protection"],
        },
        insecureResources: ["http://example.com/resources/script.js", "http://cdn.example.net/styles.css"],
      }

      setResults(dummyData)
      setLoading(false)
    }, 3000)
  }

  const clearResults = () => {
    setResults(null)
  }

  const getSeverityColor = (severity: string) => {
    switch (severity.toLowerCase()) {
      case "critical":
        return "text-red-500 bg-red-500/10 border-red-500/20"
      case "high":
        return "text-orange-500 bg-orange-500/10 border-orange-500/20"
      case "medium":
        return "text-yellow-500 bg-yellow-500/10 border-yellow-500/20"
      case "low":
        return "text-blue-400 bg-blue-400/10 border-blue-400/20"
      default:
        return "text-gray-400 bg-gray-400/10 border-gray-400/20"
    }
  }

  return (
    <div className="space-y-6">
      <form onSubmit={handleSubmit} className="space-y-4">
        <div className="flex flex-col md:flex-row gap-4">
          <div className="flex-grow relative">
            <Input
              type="text"
              placeholder="Enter website URL (e.g., https://example.com)"
              value={url}
              onChange={(e) => setUrl(e.target.value)}
              className="bg-[#1a1a1a] border-[#2a2a3a] text-gray-200 placeholder:text-gray-500 h-12 pl-12 font-mono"
            />
            <Shield className="absolute left-4 top-3.5 h-5 w-5 text-[#00ff9d]" />
          </div>

          <Button
            type="submit"
            disabled={loading}
            className="h-12 bg-gradient-to-r from-[#00ff9d] to-[#00b8ff] hover:from-[#00b8ff] hover:to-[#00ff9d] text-black font-mono transition-all duration-300"
          >
            {loading ? (
              <>
                <Cog className="mr-2 h-4 w-4 animate-spin" />
                Scanning...
              </>
            ) : (
              <>
                <Search className="mr-2 h-4 w-4" />
                Scan Website
              </>
            )}
          </Button>
        </div>
      </form>

      {error && (
        <Alert variant="destructive" className="bg-red-900/20 border-red-900 text-red-400">
          <AlertTriangle className="h-4 w-4" />
          <AlertTitle>Error</AlertTitle>
          <AlertDescription>{error}</AlertDescription>
        </Alert>
      )}

      {results && (
        <div className="space-y-6">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-bold font-mono text-[#00ff9d]">Scan Results</h2>
              <p className="text-sm text-gray-400 font-mono">
                Scanned on {new Date(results.scanDate).toLocaleString()} â€¢ Duration: {results.scanDuration}
              </p>
            </div>
            <div className="flex gap-2">
              <Button variant="outline" size="sm" className="border-[#2a2a3a] text-[#00ff9d] hover:bg-[#2a2a3a]">
                <Download className="mr-2 h-4 w-4" />
                Export Report
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={clearResults}
                className="border-[#2a2a3a] text-gray-400 hover:bg-[#2a2a3a]"
              >
                <X className="mr-2 h-4 w-4" />
                Clear
              </Button>
            </div>
          </div>

          <Tabs defaultValue="vulnerabilities" className="w-full">
            <TabsList className="bg-[#1a1a1a] border border-[#2a2a3a] rounded-md p-1 mb-4">
              <TabsTrigger
                value="vulnerabilities"
                className="data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                Vulnerabilities
              </TabsTrigger>
              <TabsTrigger value="cms" className="data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]">
                CMS & Plugins
              </TabsTrigger>
              <TabsTrigger
                value="server"
                className="data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                Server Info
              </TabsTrigger>
              <TabsTrigger
                value="security"
                className="data-[state=active]:bg-[#2a2a3a] data-[state=active]:text-[#00ff9d]"
              >
                Security Issues
              </TabsTrigger>
            </TabsList>

            <TabsContent value="vulnerabilities" className="space-y-4">
              <div className="flex justify-between items-center">
                <h3 className="text-lg font-mono text-gray-200">Found Vulnerabilities</h3>
                <div className="flex gap-2">
                  {results.vulnerabilities.some((v: any) => v.severity === "critical" || v.severity === "high") && (
                    <Badge variant="outline" className="bg-red-500/10 text-red-400 border-red-400/30">
                      Critical Issues
                    </Badge>
                  )}
                  <Badge variant="outline" className="bg-[#1a1a1a] border-[#2a2a3a]">
                    {results.vulnerabilities.length} issues
                  </Badge>
                </div>
              </div>

              {results.vulnerabilities.map((vuln: any, i: number) => (
                <div
                  key={i}
                  className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm"
                >
                  <div
                    className={`px-4 py-3 flex justify-between items-center border-l-4 ${getSeverityColor(vuln.severity)}`}
                  >
                    <div className="flex items-center gap-3">
                      <Badge variant="outline" className={getSeverityColor(vuln.severity)}>
                        {vuln.severity.toUpperCase()}
                      </Badge>
                      <h4 className="font-mono text-gray-200">{vuln.title}</h4>
                    </div>
                    <span className="text-sm font-mono bg-[#2a2a3a] text-gray-300 px-2 py-1 rounded">{vuln.id}</span>
                  </div>

                  <div className="p-4 space-y-3">
                    <p className="text-sm text-gray-300">{vuln.description}</p>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                      <div>
                        <h5 className="text-xs font-mono text-gray-400 mb-1">Affected</h5>
                        <p className="font-mono text-gray-300">{vuln.affected}</p>
                      </div>
                      <div>
                        <h5 className="text-xs font-mono text-gray-400 mb-1">Remediation</h5>
                        <p className="font-mono text-gray-300">{vuln.remediation}</p>
                      </div>
                    </div>

                    {vuln.references && vuln.references.length > 0 && (
                      <div>
                        <h5 className="text-xs font-mono text-gray-400 mb-1">References</h5>
                        <ul className="list-disc list-inside space-y-1">
                          {vuln.references.map((ref: string, i: number) => (
                            <li key={i} className="text-[#00b8ff] hover:underline text-xs">
                              <a href={ref} target="_blank" rel="noopener noreferrer">
                                {ref}
                              </a>
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </TabsContent>

            <TabsContent value="cms" className="space-y-4">
              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md p-4 backdrop-blur-sm">
                <div className="flex justify-between items-center mb-4">
                  <div>
                    <h3 className="text-lg font-mono text-gray-200">CMS Information</h3>
                    <p className="text-sm text-gray-400">
                      {results.cms.name} {results.cms.version}
                    </p>
                  </div>
                  <Badge
                    variant="outline"
                    className={
                      results.cms.outdated
                        ? "bg-orange-500/10 text-orange-400 border-orange-400/30"
                        : "bg-green-500/10 text-green-400 border-green-400/30"
                    }
                  >
                    {results.cms.outdated ? `Update to ${results.cms.recommendedVersion}` : "Up to date"}
                  </Badge>
                </div>
              </div>

              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Installed Plugins ({results.plugins.length})</h3>
                </div>
                <div className="p-4 space-y-3">
                  <div className="grid grid-cols-1 gap-2">
                    {results.plugins.map((plugin: any, i: number) => (
                      <div
                        key={i}
                        className="flex items-center justify-between py-2 border-b border-[#2a2a3a] last:border-0"
                      >
                        <div className="flex items-center">
                          <span
                            className={`w-2 h-2 rounded-full mr-3 ${plugin.active ? "bg-green-400" : "bg-gray-500"}`}
                          ></span>
                          <span className="font-mono text-gray-300">{plugin.name}</span>
                        </div>
                        <div className="flex items-center gap-3">
                          <span className="text-xs font-mono text-gray-400">v{plugin.version}</span>
                          {plugin.outdated ? (
                            <Badge
                              variant="outline"
                              className="bg-orange-500/10 text-orange-400 border-orange-400/30 text-xs"
                            >
                              Update to v{plugin.recommendedVersion}
                            </Badge>
                          ) : (
                            <Badge
                              variant="outline"
                              className="bg-green-500/10 text-green-400 border-green-400/30 text-xs"
                            >
                              Up to date
                            </Badge>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Installed Themes ({results.themes.length})</h3>
                </div>
                <div className="p-4 space-y-3">
                  <div className="grid grid-cols-1 gap-2">
                    {results.themes.map((theme: any, i: number) => (
                      <div
                        key={i}
                        className="flex items-center justify-between py-2 border-b border-[#2a2a3a] last:border-0"
                      >
                        <div className="flex items-center">
                          {theme.active && (
                            <span className="text-xs bg-[#00ff9d]/10 text-[#00ff9d] px-2 py-0.5 rounded mr-3">
                              Active
                            </span>
                          )}
                          <span className="font-mono text-gray-300">{theme.name}</span>
                        </div>
                        <div className="flex items-center gap-3">
                          <span className="text-xs font-mono text-gray-400">v{theme.version}</span>
                          {theme.outdated ? (
                            <Badge
                              variant="outline"
                              className="bg-orange-500/10 text-orange-400 border-orange-400/30 text-xs"
                            >
                              Update to v{theme.recommendedVersion}
                            </Badge>
                          ) : (
                            <Badge
                              variant="outline"
                              className="bg-green-500/10 text-green-400 border-green-400/30 text-xs"
                            >
                              Up to date
                            </Badge>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </TabsContent>

            <TabsContent value="server" className="space-y-4">
              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Server Information</h3>
                </div>
                <div className="p-4 grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <h4 className="text-sm font-mono text-gray-400 mb-1">Software</h4>
                    <p className="font-mono text-white">{results.serverInfo.software}</p>
                  </div>
                  <div>
                    <h4 className="text-sm font-mono text-gray-400 mb-1">Operating System</h4>
                    <p className="font-mono text-white">{results.serverInfo.os}</p>
                  </div>
                  <div>
                    <h4 className="text-sm font-mono text-gray-400 mb-1">Hostname</h4>
                    <p className="font-mono text-white">{results.serverInfo.hostname}</p>
                  </div>
                </div>
              </div>

              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">HTTP Headers</h3>
                </div>
                <div className="p-4 space-y-1">
                  {results.serverInfo.headers.map((header: any, i: number) => (
                    <div key={i} className="flex items-start py-1 border-b border-[#2a2a3a] last:border-0">
                      <span className="font-mono text-gray-400 w-1/4">{header.name}:</span>
                      <span className="font-mono text-white">{header.value}</span>
                    </div>
                  ))}
                </div>
              </div>

              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Outdated Components</h3>
                </div>
                <div className="p-4 space-y-1">
                  {results.serverInfo.outdatedComponents.map((component: any, i: number) => (
                    <div
                      key={i}
                      className="flex items-center justify-between py-2 border-b border-[#2a2a3a] last:border-0"
                    >
                      <span className="font-mono text-gray-300">{component.name}</span>
                      <div>
                        <span className="text-xs font-mono bg-red-500/10 text-red-400 px-2 py-1 rounded mr-2">
                          Current: v{component.current}
                        </span>
                        <span className="text-xs font-mono bg-green-500/10 text-green-400 px-2 py-1 rounded">
                          Recommended: v{component.recommended}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </TabsContent>

            <TabsContent value="security" className="space-y-4">
              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Security Headers</h3>
                </div>
                <div className="p-4 space-y-4">
                  <div>
                    <h4 className="text-sm font-mono text-gray-400 mb-2">Missing Headers</h4>
                    {results.securityHeaders.missing.length > 0 ? (
                      <div className="space-y-2">
                        {results.securityHeaders.missing.map((header: string, i: number) => (
                          <div key={i} className="flex items-center">
                            <span className="text-red-400 mr-2">
                              <X className="h-4 w-4" />
                            </span>
                            <span className="font-mono text-gray-300">{header}</span>
                          </div>
                        ))}
                      </div>
                    ) : (
                      <p className="text-green-400 font-mono">All recommended headers are present.</p>
                    )}
                  </div>

                  <div>
                    <h4 className="text-sm font-mono text-gray-400 mb-2">Implemented Headers</h4>
                    <div className="space-y-2">
                      {results.securityHeaders.implemented.map((header: string, i: number) => (
                        <div key={i} className="flex items-center">
                          <span className="text-green-400 mr-2">
                            <Check className="h-4 w-4" />
                          </span>
                          <span className="font-mono text-gray-300">{header}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md overflow-hidden backdrop-blur-sm">
                <div className="bg-[#2a2a3a]/50 px-4 py-3">
                  <h3 className="font-mono text-gray-200">Insecure Resources</h3>
                </div>
                <div className="p-4">
                  {results.insecureResources.length > 0 ? (
                    <div className="space-y-2">
                      <p className="text-sm text-gray-300 mb-3">
                        The following resources are loaded over insecure HTTP connections:
                      </p>
                      {results.insecureResources.map((resource: string, i: number) => (
                        <div key={i} className="flex items-center py-1 border-b border-[#2a2a3a] last:border-0">
                          <span className="text-orange-400 mr-2">
                            <AlertTriangle className="h-4 w-4" />
                          </span>
                          <span className="font-mono text-gray-300 text-sm break-all">{resource}</span>
                        </div>
                      ))}
                    </div>
                  ) : (
                    <p className="text-green-400 font-mono">No insecure resources detected.</p>
                  )}
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      )}

      {!results && !loading && (
        <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md p-8 text-center backdrop-blur-sm">
          <Shield className="h-12 w-12 text-[#00ff9d] mx-auto mb-4 opacity-50" />
          <h3 className="text-xl font-mono mb-2 text-gray-300">Enter a URL to scan for vulnerabilities</h3>
          <p className="text-sm text-gray-400 max-w-md mx-auto">
            The scanner will analyze the website for security issues, detect CMS and plugins, and identify potential
            vulnerabilities.
          </p>
        </div>
      )}

      <div className="border border-[#2a2a3a] bg-[#1a1a1a]/50 rounded-md p-4 text-sm text-gray-400 font-mono backdrop-blur-sm">
        <p className="mb-2">
          <span className="text-[#00ff9d]">Disclaimer:</span> This tool is for educational purposes and security
          research only.
        </p>
        <p>
          Always ensure you have permission to scan the target website. Unauthorized scanning may violate laws and
          regulations.
        </p>
      </div>
    </div>
  )
}
