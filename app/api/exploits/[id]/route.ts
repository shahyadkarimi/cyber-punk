import { NextRequest, NextResponse } from "next/server";
import connectDB from "@/lib/connectDB";
import Exploits from "@/models/ExploitsModel";
import { getAuthUser } from "@/lib/auth";

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    await connectDB();

    const authUser = await getAuthUser(request);

    const { id } = await params;

    const exploit = await Exploits.findOne({
      _id: id,
      deleted_at: null,
    })
      .populate("author_id", "username email")
      .select("-__v");

    if (!exploit) {
      return NextResponse.json(
        { error: "Exploit not found." },
        { status: 404 }
      );
    }

    const obj = Object.fromEntries(
      Object.entries(exploit.toObject()).filter(([key]) => key !== "_id")
    );

    const result = {
      id: exploit._id,
      author: exploit.author_id
        ? {
            username: exploit.author_id.username,
            email: exploit.author_id.email,
          }
        : null,
      author_id: exploit.author_id,
      ...obj,
    };

    return NextResponse.json({ ...result }, { status: 200 });
  } catch (error) {
    console.error("Error fetching exploit by ID:", error);
    return NextResponse.json(
      { error: "Failed to fetch exploit." },
      { status: 500 }
    );
  }
}
